#include <zephyr/kernel.h>
#include <zephyr/device.h>
#include <zephyr/drivers/gpio.h>
#include <inttypes.h>
#include <zephyr/sys/util.h>
#include <zephyr/sys/printk.h>
#define SW0_NODE	DT_ALIAS(sw0)
#define led0            DT_ALIAS(led0)
#define sleeptimems     10
static struct gpio_callback button_cb_data;
static const struct gpio_dt_spec button = GPIO_DT_SPEC_GET_OR(SW0_NODE, gpios, {0});
static const struct gpio_dt_spec led = GPIO_DT_SPEC_GET(led0, gpios);
void button_isr(const struct device *dev, struct gpio_callback *cb, gpio_port_pins_t pins){
        gpio_pin_toggle_dt(&led);
}
int main(void)
{       int check;
        if (!gpio_is_ready_dt(&button)){return 0;}
        if (!gpio_is_ready_dt(&led)){return 0;}
        check = gpio_pin_configure_dt(&button, GPIO_INPUT);
        if (check != 0){return 0;}
        check = gpio_pin_configure_dt(&led, GPIO_OUTPUT);
        if (check != 0){return 0;}
        gpio_pin_interrupt_configure_dt(&button,GPIO_INT_LEVEL_ACTIVE);
        gpio_init_callback(&button_cb_data, button_isr, BIT(button.pin));
	gpio_add_callback(button.port, &button_cb_data);

        while(1){
                        k_msleep(sleeptimems);
                } 
       
        return 0;
}
